name: Laravel CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Run Linter
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2

    - name: Install PHP dependencies
      run: |
        composer install --no-scripts --no-progress --prefer-dist

    - name: Run PHP CodeSniffer (Linter)
      run: |
        composer require "squizlabs/php_codesniffer=*"
        vendor/bin/phpcs --standard=PSR12 app/

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2

    - name: Install PHP dependencies
      run: |
        composer install --prefer-dist --no-progress --no-suggest

    - name: Create .env testing file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit --coverage-text

  docker:
    name: Build & Deploy Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/laravel-app:latest .

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/laravel-app:latest

    - name: Deploy to Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_rsa
        ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << EOF
          docker pull ${{ secrets.DOCKER_USERNAME }}/laravel-app:latest
          docker stop laravel_app || true
          docker rm laravel_app || true
          docker run -d --name laravel_app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/laravel-app:latest
        EOF

